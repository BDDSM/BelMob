
&НаКлиенте
Перем СтрУИД,ЗапускатьФоновыеОбмены Экспорт;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗапускатьФоновыеОбмены = Истина; //Включить или отключить глобально запуск фоновых обменов
	
	СтрУИД = Новый Структура;
	СтрУИД.Вставить("Документов", Новый УникальныйИдентификатор);
	
	УстановитьДатыПоследнихОбменов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ОтключитьОбработчикОжидания("ПроверитьВыполнениеФоновогоЗаданияКлиент");
КонецПроцедуры

#Область РаботаСФоновымиЗаданиямиОбмена
&НаКлиенте
Процедура ПроверитьВыполнениеФоновогоЗаданияКлиент()
	Завершено = 0;
	СтрЗаданий = ПроверитьВыполнениеФоновогоЗаданияСервер(Завершено,СтрУИД);
	
	Для Каждого ИскомоеФЗ ИЗ СтрУИД Цикл
		Найденное = СтрЗаданий.Получить(ИскомоеФЗ.Значение);
		Если Найденное = Неопределено Тогда Продолжить КонецЕсли;
		
		Если Найденное.Состояние = 0 Тогда //Завершено
			Элементы["Обновление" + ИскомоеФЗ.Ключ].Картинка = БиблиотекаКартинок.НачатьОбмен;
			УстановитьДатыПоследнихОбменов();
			ОтключитьОбработчикОжидания("ПроверитьВыполнениеФоновогоЗаданияКлиент");
		ИначеЕсли Найденное.Состояние = 1 Тогда //Активно
			Элементы["Обновление" + ИскомоеФЗ.Ключ].Картинка = БиблиотекаКартинок.АнимацияОбновления;
			ПодключитьОбработчикОжидания("ПроверитьВыполнениеФоновогоЗаданияКлиент",1, Истина);
		ИначеЕсли Найденное.Состояние = 2 Тогда //Завершено с ошибками
			Элементы["Обновление" + ИскомоеФЗ.Ключ].Картинка = БиблиотекаКартинок.ИконкаВнимание;
			ОтключитьОбработчикОжидания("ПроверитьВыполнениеФоновогоЗаданияКлиент");
		КонецЕсли;	
		Если ЗначениеЗаполнено(Найденное.Сообщение) Тогда
			ЭтаФорма["ПричинаОшибки" + ИскомоеФЗ.Ключ] = Найденное.Сообщение;
		КонецЕсли;
		Если ЗначениеЗаполнено(Найденное.Ошибка) Тогда
			ЭтаФорма["ПричинаОшибки" + ИскомоеФЗ.Ключ] = Найденное.Ошибка;
		КонецЕсли;
		
		
		Элементы["Обновление" + ИскомоеФЗ.Ключ].Доступность = Найденное.Состояние <> 1;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьВыполнениеФоновогоЗаданияСервер(Завершено,СтрДанных)
	ВсеЗадания = ФоновыеЗадания.ПолучитьФоновыеЗадания();
	СтрЗаданий = Новый Соответствие;
	Для Каждого ФЗ Из ВсеЗадания Цикл;
		Если НЕ ЗначениеЗаполнено(ФЗ.Ключ) Тогда Продолжить КонецЕсли;
		Если СтрЗаданий.Получить(Новый УникальныйИдентификатор(ФЗ.Ключ)) <> Неопределено Тогда Продолжить КонецЕсли;
		СтрСообщения = Новый Структура("Сообщение,Состояние,Ошибка");
		
		Сообщения = ФЗ.ПолучитьСообщенияПользователю(Истина);
		Если Не Сообщения = Неопределено 
			И Не Сообщения.Количество() = 0 Тогда
			Сообщение = Сообщения.Получить(Сообщения.ВГраница());
			СтрСообщения.Вставить("Сообщение", Сообщение.Текст);
			//Сообщение.Сообщить();
		КонецЕсли;
		СтрСообщения.Вставить("Ошибка", ?(ФЗ.ИнформацияОбОшибке = Неопределено, "",ФЗ.ИнформацияОбОшибке.Описание + Символы.ПС + ?(ФЗ.ИнформацияОбОшибке.Причина = Неопределено, "", ФЗ.ИнформацияОбОшибке.Причина.Описание)));		
 
		СтрСообщения.Вставить("Состояние", ВернутьСтатусФоновогоЗадания(ФЗ.Состояние));
		СтрЗаданий.Вставить(Новый УникальныйИдентификатор(ФЗ.Ключ), СтрСообщения);
	КонецЦикла;
	
	Возврат СтрЗаданий;
	
КонецФункции

&НаСервереБезКонтекста
Функция ВернутьСтатусФоновогоЗадания(Состояние)
	
	Если Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Завершено = 1;
	ИначеЕсли Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		Завершено = 2;
	Иначе
		Завершено = 0;
	КонецЕсли;
	Возврат Завершено;
КонецФункции
#КонецОбласти

&НаСервере
Процедура УстановитьДатыПоследнихОбменов()	
	ДатаПоследнегоОбмена = Константы.ДатаПоследнегоОбмена.Получить();
	УстановитьДанныеПоОбмену(ДатаПоследнегоОбмена);
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоОбмену(Дата)
	Если Дата < НачалоДня(ТекущаяДата()) Тогда
		УстановитьВидимостьДанныхПоОбмену(, "Документов");
	Иначе
		УстановитьВидимостьДанныхПоОбмену(Формат(Дата,"ДФ=HH:mm"), "Документов");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДанныхПоОбмену(Дата = Неопределено, ИмяДанных)
	Элементы["Дата" + ИмяДанных + "Да"].Видимость = ЗначениеЗаполнено(Дата);
	Элементы["Дата" + ИмяДанных + "Нет"].Видимость = НЕ ЗначениеЗаполнено(Дата);
	
	Элементы["Дата" + ИмяДанных + "Да"].Заголовок = Дата;
КонецПроцедуры

#Область ЗапускОбменов

//Документы

&НаКлиенте
Процедура ОбновлениеДокументов(Комманда, АвтоЗапускОбменаИлиРучной = Истина)
	Если ЗапускатьФоновыеОбмены И АвтоЗапускОбменаИлиРучной Тогда	
		ЗаданиеЗапущенно = СинхронизацияДанных.ЗапуститьОбменДанными(СтрУИД.Документов,"СинхронизацияДанных.СделатьОбмен");
		Если ЗаданиеЗапущенно Тогда
			Элементы.ОбновлениеДокументов.Картинка = БиблиотекаКартинок.АнимацияОбновления;
			Элементы.ОбновлениеДокументов.Доступность = Ложь;
			ПодключитьОбработчикОжидания("ПроверитьВыполнениеФоновогоЗаданияКлиент",1, Истина);
		Иначе 
			ОбновлениеДокументов("",Ложь) //Значит запускаем ручной обмен
		КонецЕсли;
	Иначе
		Элементы.ОбновлениеДокументов.Картинка = БиблиотекаКартинок.АнимацияОбновления;
		ПодключитьОбработчикОжидания("ОбновлениеДокументовЗапуск",0.2,Истина);
		Элементы.ОбновлениеДокументов.Картинка = БиблиотекаКартинок.НачатьОбмен;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеДокументовЗапуск()
	Попытка
		СинхронизацияДанных.СделатьОбмен();
		Элементы.ОбновлениеДокументов.Картинка = БиблиотекаКартинок.НачатьОбмен;
		
		УстановитьДатыПоследнихОбменов();
	Исключение
		Элементы.ОбновлениеДокументов.Картинка = БиблиотекаКартинок.ИконкаВнимание;
		ПричинаОшибкиДокументов = ОписаниеОшибки();
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтаФорма.Заголовок = "Рабочий стол v." + Метаданные.Версия;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//Если ИмяСобытия = "Сканирование" Тогда
	//	Если ЭтаФорма.ВводДоступен() Тогда
	//		СтрТовара = ШтрихкодированиеКлиент.ПоискПоШтрихкоду(Параметр);
	//		Если СтрТовара = Неопределено Тогда
	//			Сообщить("Товар со шрихкодом: " + Параметр + ".
	//			|НЕ НАЙДЕН!");
	//		Иначе
	//			ПоказатьЗначение(,СтрТовара.Номенклатура);
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры
